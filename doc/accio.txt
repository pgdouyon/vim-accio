*accio.txt*     Neovim wrapper around :compiler and :make              *accio*

==============================================================================
Contents                                                      *accio-contents*

    1. Intro............................................|accio-intro|
    2. Options..........................................|accio-options|
    3. Commands.........................................|accio-commands|
    4. Mappings.........................................|accio-mappings|
    5. Statusline.......................................|accio-statusline|
    6. Signs............................................|accio-signs|

==============================================================================
Intro                                                            *accio-intro*

Accio asynchronously summons build/compiler/linter output to your screen by
wrapping the |:compiler| and |:make| commands with Neovim's job control
API.  Output from these programs is displayed in the following ways:

    - Populating the quickfix list
    - Placing signs on the error lines
    - Echoing the error message when the cursor is on an error line.

Accio doesn't provide any pre-configured compilers/syntax checkers, instead it
utilizes compiler plugins to run whatever build/compiler/linter programs they
specify and parse their output.  Vim ships with several compiler plugins but
writing your own is fairly straightforward |write-compiler-plugin|


==============================================================================
Options                                                        *accio-options*

g:accio_auto_copen                                        *g:accio_auto_copen*
                        If this variable is 1 Accio will automatically open the
                        quickfix list when invoked if any errors are detected. >
                            let g:accio_auto_copen = 1
<
                        The default value is 0.

g:accio_create_empty_quickfix                  *g:accio_create_empty_quickfix*
                        Accio will always reuse its own quickfix list, but if
                        the current quickfix list was populated by another
                        command then Accio creates a brand-new quickfix list
                        by default even if there are no errors to report.

                        Set this variable to 0 to only create new quickfix
                        lists when Accio has errors to report.

g:accio_update_interval                              *g:accio_update_interval*
                        This variable represents the interval, in
                        milliseconds, between updates to the quickfix list and
                        displayed signs.

                        Lowering this value will cause lag due to screen
                        redraws whenever the quickfix list is open; in most
                        cases, the lag is negligible when the quickfix list is
                        closed. >
                            let g:accio_update_interval = 1000
<
                        The default value is 500.


==============================================================================
Commands                                                      *accio-commands*

:Accio {arguments}                                                    *:Accio*
                        Invokes the 'makeprg' specified by the compiler
                        plugins passed to the command and displays any
                        errors/warnings reported.  If |g:accio_auto_copen| is
                        set, automatically opens the quickfix list when there
                        are recognized errors/warnings.

                        To run a single compiler plugin, simply pass its name
                        to Accio.  To run a group of compiler plugins and
                        aggregate their results into one quickfix list, pass
                        the arguments as a list of compiler plugin names.

                        For example: >

                                :Accio javac
                                :Accio ["javac", "checkstyle"]

<                       Note: The compiler names must be quoted when passed as
                        a list, otherwise Vim will attempt to resolve them as
                        variable names and throw an error


==============================================================================
Mappings                                                      *accio-mappings*

<Plug>AccioPrevWarning                                *accio-[w* *<Plug>AccioPrevWarning*
                        Go to [count] previous line with an error/warning

<Plug>AccioNextWarning                                *accio-]w* *<Plug>AccioNextWarning*
                        Go to [count] next line with an error/warning


==============================================================================
Statusline                                                  *accio-statusline*

accio#statusline([{fmt}[, {noerr}]])                      *accio#statusline()*
                        Accio provides a statusline function that will report
                        the number of errors in the current buffer.

                        An example statusline configuration: >
                            set statusline+=%#WarningMsg#
                            set statusline+=%{accio#statusline()}
                            set statusline+=%*
<
                        When {fmt} is supplied as a string containing a "%d"
                        placeholder, it is used as the format string for
                        displaying the number of errors: >
                            accio#statusline("Errors: %d")
<
                        The optional argument {noerr} specifies the output
                        when there are no errors (otherwise, {fmt} is used): >
                            accio#statusline("Errors: %d", "No errors")
<

==============================================================================
Signs                                                            *accio-signs*

AccioErrorSign                                             *hl-AccioErrorSign*
                        The highlight group used for displaying Error signs. >
                            highlight! link AccioErrorSign ErrorMsg
<
                        It is linked to the "ErrorMsg" group by default.

AccioWarningSign                                         *hl-AccioWarningSign*
                        The highlight group used for displaying Warning signs. >
                            highlight! link AccioWarningSign WarningMsg
<
                        It is linked to the "WarningMsg" group by default.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
